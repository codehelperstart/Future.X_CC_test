version: '3.8'

services:
  # MongoDB数据库服务
  mongodb:
    image: mongo:6.0
    container_name: ai-coding-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-password123}
      MONGO_INITDB_DATABASE: ${DB_NAME:-ai-coding-platform}
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - ai-coding-network

  # Redis缓存服务（可选）
  redis:
    image: redis:7-alpine
    container_name: ai-coding-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis123}
    volumes:
      - redis_data:/data
    networks:
      - ai-coding-network

  # 后端API服务
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ai-coding-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/ai-coding-platform?authSource=admin
      DB_NAME: ${DB_NAME:-ai-coding-platform}
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-this}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-7d}
      REDIS_URL: redis://:redis123@redis:6379
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:3000}
      MAX_FILE_SIZE: ${MAX_FILE_SIZE:-10485760}
      BCRYPT_ROUNDS: ${BCRYPT_ROUNDS:-12}
      LOG_LEVEL: ${LOG_LEVEL:-info}
    volumes:
      - uploads_data:/app/server/uploads
      - logs_data:/app/server/logs
    depends_on:
      - mongodb
      - redis
    networks:
      - ai-coding-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx反向代理（生产环境推荐）
  nginx:
    image: nginx:alpine
    container_name: ai-coding-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./ssl:/etc/nginx/ssl  # SSL证书目录
      - logs_nginx:/var/log/nginx
    depends_on:
      - backend
    networks:
      - ai-coding-network

# 数据卷
volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
  redis_data:
    driver: local
  uploads_data:
    driver: local
  logs_data:
    driver: local
  logs_nginx:
    driver: local

# 网络
networks:
  ai-coding-network:
    driver: bridge